@* 
@using WebClient.Services
@page "/login"
@inject ILoginService LoginService
@inject NavigationManager NavigationManager

<h3>Login</h3>

<!-- Login form -->
<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if (loginFailed)
    {
        <p class="text-danger">Login failed. Please try again.</p>
    }
</EditForm>

@code {
    // Login form model
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;

    // Handle the login form submission
    private async Task HandleLogin()
    {
        // Call the login service to authenticate the user
        bool success = await LoginService.Login(loginModel.Username, loginModel.Password);

        if (success)
        {
            // If login succeeds, navigate to the Profile page
            NavigationManager.NavigateTo("/profile");
        }
        else
        {
            // If login fails, show an error message
            loginFailed = true;
        }
    }

    // Define the login model
    public class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
 *@

 @using WebClient.Services
 @page "/login"
@inject ILoginService LoginService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<h3>Login</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (successMessage != null)
{
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

<div class="form-group">
    <label for="username">Username</label>
    <input type="text" class="form-control" id="username" @bind="username" />
</div>

<div class="form-group">
    <label for="password">Password</label>
    <input type="password" class="form-control" id="password" @bind="password" />
</div>

<button class="btn btn-primary" @onclick="OnLoginClicked">Login</button>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string? errorMessage;
    private string? successMessage;

    private async Task OnLoginClicked()
    {
        errorMessage = null;
        successMessage = null;

        var result = await LoginService.Login(username, password);

        if (result)
        {
            // Show success alert
            successMessage = "Login successful! Redirecting to profile...";
            // Optionally delay for 1-2 seconds before redirecting to show the success message
            await Task.Delay(2000);

            // Redirect to profile page after successful login
            Navigation.NavigateTo("/profile");
        }
        else
        {
            errorMessage = "Login failed. Please check your credentials.";
        }
    }
}